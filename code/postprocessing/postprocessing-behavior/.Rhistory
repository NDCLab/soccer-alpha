cat("excluded (too slow):", sum(all_trial_info$exclusion_reason == "too_slow"), "\n")
return(all_trial_info)
}
# make sure you have paths loaded
source("config/paths.R")
# test with all subjects
all_data <- test_eeg_trial_loading(eeg_dir)
# look at the results
View(all_data)
# apply_eeg_exclusions.r - mark which behavioral trials are included in eeg analyses
# author: marlene buch
library(tidyverse)
mark_eeg_inclusion <- function(behavioral_data, eeg_trial_info, verbose = TRUE) {
# add eeg inclusion flags to behavioral data
#
# inputs:
#   behavioral_data - tibble from load_behavioral_data()
#   eeg_trial_info - tibble from load_eeg_trial_info()
#   verbose - print diagnostic info
#
# outputs:
#   behavioral data with added columns:
#     - trial_idx: row number within subject (matches eeg trial_idx)
#     - in_eeg: TRUE if trial survived eeg preprocessing & made it to epochs
#     - eeg_analysis_ready: TRUE if trial is used in eeg analyses (not code ending in 7/8)
#     - eeg_exclusion_reason: "none", "multiple_keypresses", "too_slow", or "rejected_during_eeg_preprocessing"
if (verbose) message("marking eeg inclusion in behavioral data...")
# check that both datasets have subject column
if (!("subject" %in% names(behavioral_data))) {
stop("behavioral_data must have 'subject' column")
}
if (!("subject" %in% names(eeg_trial_info))) {
stop("eeg_trial_info must have 'subject' column")
}
# add trial_idx to behavioral data (row number within each subject)
behavioral_with_idx <- behavioral_data %>%
group_by(subject) %>%
mutate(trial_idx = row_number()) %>%
ungroup()
if (verbose) {
message("  behavioral data: ", nrow(behavioral_with_idx), " trials from ",
n_distinct(behavioral_with_idx$subject), " subjects")
message("  eeg data: ", nrow(eeg_trial_info), " trials from ",
n_distinct(eeg_trial_info$subject), " subjects")
}
# join with eeg info
behavioral_with_eeg <- behavioral_with_idx %>%
left_join(
eeg_trial_info %>%
select(subject, trial_idx, eeg_included, exclusion_reason, analysis_ready),
by = c("subject", "trial_idx")
) %>%
mutate(
# if no match in eeg data, trial was rejected during eeg preprocessing
in_eeg = !is.na(eeg_included),
eeg_analysis_ready = coalesce(analysis_ready, FALSE),
eeg_exclusion_reason = case_when(
is.na(exclusion_reason) ~ "rejected_during_eeg_preprocessing",
TRUE ~ exclusion_reason
)
) %>%
select(-eeg_included, -exclusion_reason, -analysis_ready)  # clean up join columns
if (verbose) {
n_in_eeg <- sum(behavioral_with_eeg$in_eeg)
n_not_in_eeg <- sum(!behavioral_with_eeg$in_eeg)
n_analysis_ready <- sum(behavioral_with_eeg$eeg_analysis_ready)
n_multiple_key <- sum(behavioral_with_eeg$eeg_exclusion_reason == "multiple_keypresses")
n_too_slow <- sum(behavioral_with_eeg$eeg_exclusion_reason == "too_slow")
n_rejected_eeg <- sum(behavioral_with_eeg$eeg_exclusion_reason == "rejected_during_eeg_preprocessing")
message("\n=== EEG INCLUSION SUMMARY ===")
message("  trials in eeg epochs: ", n_in_eeg, " (", round(100 * n_in_eeg / nrow(behavioral_with_eeg), 1), "%)")
message("  trials rejected during eeg preprocessing: ", n_rejected_eeg)
message("  trials eeg-analysis-ready: ", n_analysis_ready)
message("  trials excluded (multiple key): ", n_multiple_key)
message("  trials excluded (too slow): ", n_too_slow)
}
return(behavioral_with_eeg)
}
# === TESTING FUNCTION ===
test_eeg_marking <- function(behavioral_dir, eeg_dir, test_subject = NULL) {
# test marking eeg inclusion with diagnostic output
#
# inputs:
#   behavioral_dir - path to preprocessed behavior folder
#   eeg_dir - path to preprocessed eeg folder
#   test_subject - optional single subject id to test (e.g., "390002")
cat("\n=== TESTING EEG INCLUSION MARKING ===\n\n")
# load both datasets
cat("loading behavioral data...\n")
behavioral_data <- load_behavioral_data(behavioral_dir, subjects = test_subject)
cat("loading eeg trial info...\n")
eeg_trial_info <- load_eeg_trial_info(eeg_dir, subjects = test_subject, verbose = FALSE)
# mark eeg inclusion
cat("\nmarking eeg inclusion...\n")
behavioral_with_eeg <- mark_eeg_inclusion(behavioral_data, eeg_trial_info, verbose = TRUE)
# show results
cat("\n=== SAMPLE DATA ===\n")
print(behavioral_with_eeg %>%
select(subject, trial_idx, code, in_eeg, eeg_analysis_ready, eeg_exclusion_reason) %>%
head(20))
cat("\n=== EXCLUSION BREAKDOWN BY SUBJECT ===\n")
subject_summary <- behavioral_with_eeg %>%
group_by(subject) %>%
summarise(
n_total = n(),
n_in_eeg = sum(in_eeg),
n_rejected_eeg_prep = sum(eeg_exclusion_reason == "rejected_during_eeg_preprocessing"),
n_multiple_key = sum(eeg_exclusion_reason == "multiple_keypresses"),
n_too_slow = sum(eeg_exclusion_reason == "too_slow"),
n_analysis_ready = sum(eeg_analysis_ready),
pct_analysis_ready = round(100 * sum(eeg_analysis_ready) / n(), 1)
) %>%
arrange(subject)
print(subject_summary, n = 50)
cat("\n=== OVERALL EXCLUSION REASONS ===\n")
exclusion_summary <- behavioral_with_eeg %>%
count(eeg_exclusion_reason, eeg_analysis_ready) %>%
arrange(desc(n))
print(exclusion_summary)
cat("\n=== VALIDATION: COMPARE TRIAL COUNTS ===\n")
cat("behavioral total trials:", nrow(behavioral_data), "\n")
cat("eeg total epochs:", nrow(eeg_trial_info), "\n")
cat("matched trials (in_eeg = TRUE):", sum(behavioral_with_eeg$in_eeg), "\n")
cat("analysis-ready trials:", sum(behavioral_with_eeg$eeg_analysis_ready), "\n")
# check for mismatches
cat("\n=== CHECKING FOR ISSUES ===\n")
# issue 1: trials in eeg but not in behavioral
eeg_only <- anti_join(eeg_trial_info, behavioral_data %>%
group_by(subject) %>%
mutate(trial_idx = row_number()),
by = c("subject", "trial_idx"))
if (nrow(eeg_only) > 0) {
cat("✗ WARNING:", nrow(eeg_only), "trials in eeg but not in behavioral data\n")
} else {
cat("✓ all eeg trials have matching behavioral trials\n")
}
# issue 2: subjects in eeg but not behavioral
eeg_subjects <- unique(eeg_trial_info$subject)
beh_subjects <- unique(behavioral_data$subject)
missing_from_beh <- setdiff(eeg_subjects, beh_subjects)
missing_from_eeg <- setdiff(beh_subjects, eeg_subjects)
if (length(missing_from_beh) > 0) {
cat("✗ WARNING: subjects in eeg but not behavioral:", paste(missing_from_beh, collapse = ", "), "\n")
}
if (length(missing_from_eeg) > 0) {
cat("✗ WARNING: subjects in behavioral but not eeg:", paste(missing_from_eeg, collapse = ", "), "\n")
}
if (length(missing_from_beh) == 0 && length(missing_from_eeg) == 0) {
cat("✓ same subjects in both datasets\n")
}
return(behavioral_with_eeg)
}
# clear and reload everything
rm(list = ls())
# load functions
source("config/paths.R")
source("functions/load_behavioral_data.R")
source("functions/load_eeg_trial_info.R")
# paste the apply_eeg_exclusions.R function i gave you into console
# (the mark_eeg_inclusion function and test_eeg_marking function)
# then test with one subject
test_marked <- test_eeg_marking(behavioral_dir, eeg_dir, test_subject = "390002")
library(tidyverse)
mark_eeg_inclusion <- function(behavioral_data, eeg_trial_info, verbose = TRUE) {
if (verbose) message("marking eeg inclusion in behavioral data...")
if (!("subject" %in% names(behavioral_data))) {
stop("behavioral_data must have 'subject' column")
}
if (!("subject" %in% names(eeg_trial_info))) {
stop("eeg_trial_info must have 'subject' column")
}
behavioral_with_idx <- behavioral_data %>%
group_by(subject) %>%
mutate(trial_idx = row_number()) %>%
ungroup()
if (verbose) {
message("  behavioral data: ", nrow(behavioral_with_idx), " trials from ",
n_distinct(behavioral_with_idx$subject), " subjects")
message("  eeg data: ", nrow(eeg_trial_info), " trials from ",
n_distinct(eeg_trial_info$subject), " subjects")
}
behavioral_with_eeg <- behavioral_with_idx %>%
left_join(
eeg_trial_info %>%
select(subject, trial_idx, eeg_included, exclusion_reason, analysis_ready),
by = c("subject", "trial_idx")
) %>%
mutate(
in_eeg = !is.na(eeg_included),
eeg_analysis_ready = coalesce(analysis_ready, FALSE),
eeg_exclusion_reason = case_when(
is.na(exclusion_reason) ~ "rejected_during_eeg_preprocessing",
TRUE ~ exclusion_reason
)
) %>%
select(-eeg_included, -exclusion_reason, -analysis_ready)
if (verbose) {
n_in_eeg <- sum(behavioral_with_eeg$in_eeg)
n_not_in_eeg <- sum(!behavioral_with_eeg$in_eeg)
n_analysis_ready <- sum(behavioral_with_eeg$eeg_analysis_ready)
n_multiple_key <- sum(behavioral_with_eeg$eeg_exclusion_reason == "multiple_keypresses")
n_too_slow <- sum(behavioral_with_eeg$eeg_exclusion_reason == "too_slow")
n_rejected_eeg <- sum(behavioral_with_eeg$eeg_exclusion_reason == "rejected_during_eeg_preprocessing")
message("\n=== EEG INCLUSION SUMMARY ===")
message("  trials in eeg epochs: ", n_in_eeg, " (", round(100 * n_in_eeg / nrow(behavioral_with_eeg), 1), "%)")
message("  trials rejected during eeg preprocessing: ", n_rejected_eeg)
message("  trials eeg-analysis-ready: ", n_analysis_ready)
message("  trials excluded (multiple key): ", n_multiple_key)
message("  trials excluded (too slow): ", n_too_slow)
}
return(behavioral_with_eeg)
}
test_eeg_marking <- function(behavioral_dir, eeg_dir, test_subject = NULL) {
cat("\n=== TESTING EEG INCLUSION MARKING ===\n\n")
cat("loading behavioral data...\n")
behavioral_data <- load_behavioral_data(behavioral_dir, subjects = test_subje
stop
# load_eeg_trial_info.r - extract trial-level info from preprocessed eeg .set files
# author: marlene buch
library(tidyverse)
library(R.matlab)
load_eeg_trial_info <- function(eeg_dir, subjects = NULL, verbose = TRUE) {
# read preprocessed eeg .set files & extract which behavioral trials survived eeg preprocessing
#
# inputs:
#   eeg_dir - path to preprocessed eeg folder (e.g., derivatives/preprocessed/s1_r1/eeg)
#   subjects - optional vector of subject ids to load (e.g., c("390001", "390002"))
#   verbose - print diagnostic info while loading
#
# outputs:
#   tibble with columns:
#     - subject: subject id
#     - trial_idx: original behavioral trial number (from csv row)
#     - beh_code: behavioral code for this trial
#     - eeg_included: TRUE (all trials in output survived eeg preprocessing)
#     - exclusion_reason: "none", "multiple_keypresses", or "too_slow"
#     - analysis_ready: TRUE if trial is used in analyses (exclusion_reason == "none")
if (verbose) message("loading eeg trial info from .set files...")
if (verbose) message("  eeg directory: ", eeg_dir)
subject_dirs <- list.dirs(eeg_dir, recursive = FALSE, full.names = TRUE)
if (length(subject_dirs) == 0) {
stop("no subject directories found in: ", eeg_dir)
}
if (!is.null(subjects)) {
subject_pattern <- paste0("sub-", subjects, collapse = "|")
subject_dirs <- subject_dirs[str_detect(basename(subject_dirs), subject_pattern)]
}
if (verbose) message("  found ", length(subject_dirs), " subject directories")
all_trial_info <- map_dfr(subject_dirs, function(subject_dir) {
subject_id <- str_extract(basename(subject_dir), "\\d+")
if (verbose) message("  processing subject ", subject_id)
set_files <- list.files(subject_dir, pattern = ".*_processed_data_.*\\.set$", full.names = TRUE)
if (length(set_files) == 0) {
warning("  no processed .set file found for subject ", subject_id)
return(NULL)
}
if (length(set_files) > 1) {
warning("  multiple .set files found for subject ", subject_id, ", using first")
}
tryCatch({
eeg_data <- readMat(set_files[1])
EEG <- eeg_data$EEG
epochs <- EEG[,, 1]$epoch
if (is.null(epochs) || length(epochs) == 0) {
warning("  no epoch info found for subject ", subject_id)
return(NULL)
}
n_epochs <- dim(epochs)[3]
if (verbose) message("    found ", n_epochs, " epochs in .set file")
trial_indices <- numeric(n_epochs)
beh_codes <- numeric(n_epochs)
epoch_fields <- dimnames(epochs)[[1]]
beh_trial_nr_idx <- which(epoch_fields == "beh.trial.nr")
beh_code_idx <- which(epoch_fields == "beh.code")
if (length(beh_trial_nr_idx) == 0 || length(beh_code_idx) == 0) {
warning("  cannot find required fields in epochs for subject ", subject_id)
return(NULL)
}
for (i in 1:n_epochs) {
trial_nr_value <- epochs[beh_trial_nr_idx, 1, i]
if (is.list(trial_nr_value) && length(trial_nr_value) > 0) {
trial_indices[i] <- as.numeric(trial_nr_value[[1]])
} else if (is.numeric(trial_nr_value)) {
trial_indices[i] <- trial_nr_value
} else {
trial_indices[i] <- NA
}
code_value <- epochs[beh_code_idx, 1, i]
if (is.list(code_value) && length(code_value) > 0) {
beh_codes[i] <- as.numeric(code_value[[1]])
} else if (is.numeric(code_value)) {
beh_codes[i] <- code_value
} else {
beh_codes[i] <- NA
}
}
trial_info <- tibble(
subject = subject_id,
trial_idx = trial_indices,
beh_code = beh_codes,
eeg_included = TRUE
) %>%
filter(!is.na(trial_idx) & !is.na(beh_code)) %>%
mutate(
exclusion_reason = case_when(
beh_code %% 10 == 7 ~ "multiple_keypresses",
beh_code %% 10 == 8 ~ "too_slow",
TRUE ~ "none"
),
analysis_ready = exclusion_reason == "none"
)
if (verbose) {
n_total <- nrow(trial_info)
n_analysis <- sum(trial_info$analysis_ready)
n_multiple_key <- sum(trial_info$exclusion_reason == "multiple_keypresses")
n_too_slow <- sum(trial_info$exclusion_reason == "too_slow")
message("    loaded ", n_total, " epochs")
message("      analysis-ready: ", n_analysis)
message("      excluded (multiple key): ", n_multiple_key)
message("      excluded (too slow): ", n_too_slow)
message("    behavioral codes present: ",
paste(sort(unique(trial_info$beh_code)), collapse = ", "))
}
return(trial_info)
}, error = function(e) {
warning("  error reading .set file for subject ", subject_id, ": ", e$message)
return(NULL)
})
})
if (nrow(all_trial_info) == 0) {
stop("no trial info loaded from any subjects")
}
if (verbose) {
message("\n=== LOADING COMPLETE ===")
message("  subjects loaded: ", n_distinct(all_trial_info$subject))
message("  total eeg epochs: ", nrow(all_trial_info))
message("  analysis-ready trials: ", sum(all_trial_info$analysis_ready))
message("  excluded (multiple key): ", sum(all_trial_info$exclusion_reason == "multiple_keypresses"))
message("  excluded (too slow): ", sum(all_trial_info$exclusion_reason == "too_slow"))
message("  trials per subject (mean): ", round(nrow(all_trial_info) / n_distinct(all_trial_info$subject), 1))
}
return(all_trial_info)
}
# === TESTING FUNCTION ===
test_eeg_trial_loading <- function(eeg_dir, test_subject = NULL) {
# test the eeg trial info loading with diagnostic output
#
# inputs:
#   eeg_dir - path to preprocessed eeg folder
#   test_subject - optional single subject id to test (e.g., "390002")
cat("\n=== TESTING EEG TRIAL INFO LOADING ===\n\n")
if (!is.null(test_subject)) {
cat("TEST 1: loading single subject (", test_subject, ")\n")
cat("-------------------------------------------\n")
trial_info <- load_eeg_trial_info(eeg_dir, subjects = test_subject, verbose = TRUE)
cat("\nRESULTS:\n")
print(head(trial_info, 10))
cat("\nEXCLUSION SUMMARY:\n")
print(trial_info %>% count(exclusion_reason, analysis_ready))
cat("\nEXCLUDED TRIALS BY CODE:\n")
excluded_summary <- trial_info %>%
filter(!analysis_ready) %>%
count(beh_code, exclusion_reason)
if (nrow(excluded_summary) > 0) {
print(excluded_summary)
} else {
cat("  no excluded trials\n")
}
cat("\nVALIDATION CHECKS:\n")
if (any(is.na(trial_info$trial_idx))) {
cat("  ✗ WARNING: found", sum(is.na(trial_info$trial_idx)), "NA trial_idx values\n")
} else {
cat("  ✓ no NA trial_idx values\n")
}
if (any(duplicated(trial_info$trial_idx))) {
cat("  ✗ WARNING: found duplicate trial_idx values\n")
} else {
cat("  ✓ no duplicate trial_idx values\n")
}
return(trial_info)
}
# test all subjects
cat("TEST 2: loading all subjects\n")
cat("-------------------------------------------\n")
all_trial_info <- load_eeg_trial_info(eeg_dir, verbose = TRUE)
cat("\nPER-SUBJECT SUMMARY:\n")
subject_summary <- all_trial_info %>%
group_by(subject) %>%
summarise(
n_total = n(),
n_analysis_ready = sum(analysis_ready),
n_multiple_key = sum(exclusion_reason == "multiple_keypresses"),
n_too_slow = sum(exclusion_reason == "too_slow"),
codes_present = paste(sort(unique(beh_code)), collapse = ",")
) %>%
arrange(subject)
print(subject_summary, n = 50)
cat("\n=== OVERALL SUMMARY ===\n")
cat("total subjects:", n_distinct(all_trial_info$subject), "\n")
cat("total epochs:", nrow(all_trial_info), "\n")
cat("analysis-ready trials:", sum(all_trial_info$analysis_ready), "\n")
cat("excluded (multiple key):", sum(all_trial_info$exclusion_reason == "multiple_keypresses"), "\n")
cat("excluded (too slow):", sum(all_trial_info$exclusion_reason == "too_slow"), "\n")
return(all_trial_info)
}
# make sure you have paths loaded
source("config/paths.R")
# test with all subjects
all_data <- test_eeg_trial_loading(eeg_dir)
# use the eeg data you already loaded earlier
# first, load just subject 390002's eeg data quickly
eeg_390002 <- load_eeg_trial_info(eeg_dir, subjects = "390002", verbose = FALSE)
# load behavioral data
beh_390002 <- load_behavioral_data(behavioral_dir, subjects = "390002")
# mark eeg inclusion
marked_390002 <- mark_eeg_inclusion(beh_390002, eeg_390002, verbose = TRUE)
# check the results
head(marked_390002 %>% select(subject, trial_idx, code, in_eeg, eeg_analysis_ready, eeg_exclusion_reason), 20)
# exclusion summary
marked_390002 %>% count(eeg_exclusion_reason, eeg_analysis_ready)
# compare totals
cat("behavioral total:", nrow(beh_390002), "\n")
cat("eeg total:", nrow(eeg_390002), "\n")
cat("in_eeg:", sum(marked_390002$in_eeg), "\n")
cat("analysis_ready:", sum(marked_390002$eeg_analysis_ready), "\n")
# analyze all behavioral trials
marked_390002 %>%
summarise(mean_rt = mean(flankerResponse.rt, na.rm = TRUE))
# analyze only eeg-matched trials (what goes into grand averages)
marked_390002 %>%
filter(eeg_analysis_ready) %>%
summarise(mean_rt = mean(flankerResponse.rt, na.rm = TRUE))
# see which trials were rejected by eeg
marked_390002 %>%
filter(!in_eeg) %>%
select(trial_idx, code, target, flanker, flankerResponse.rt)
# apply_eeg_exclusions.r - mark which behavioral trials are included in eeg analyses
# author: marlene buch
library(tidyverse)
mark_eeg_inclusion <- function(behavioral_data, eeg_trial_info, verbose = TRUE) {
# add eeg inclusion flags to behavioral data
#
# inputs:
#   behavioral_data - tibble from load_behavioral_data()
#   eeg_trial_info - tibble from load_eeg_trial_info()
#   verbose - print diagnostic info
#
# outputs:
#   behavioral data with added columns:
#     - trial_idx: row number within subject (matches eeg trial_idx)
#     - in_eeg: TRUE if trial survived eeg preprocessing & made it to epochs
#     - eeg_analysis_ready: TRUE if trial is used in eeg analyses (not code ending in 7/8)
#     - eeg_exclusion_reason: "none", "multiple_keypresses", "too_slow", or "rejected_during_eeg_preprocessing"
if (verbose) message("marking eeg inclusion in behavioral data...")
if (!("subject" %in% names(behavioral_data))) {
stop("behavioral_data must have 'subject' column")
}
if (!("subject" %in% names(eeg_trial_info))) {
stop("eeg_trial_info must have 'subject' column")
}
behavioral_with_idx <- behavioral_data %>%
group_by(subject) %>%
mutate(trial_idx = row_number()) %>%
ungroup()
if (verbose) {
message("  behavioral data: ", nrow(behavioral_with_idx), " trials from ",
n_distinct(behavioral_with_idx$subject), " subjects")
message("  eeg data: ", nrow(eeg_trial_info), " trials from ",
n_distinct(eeg_trial_info$subject), " subjects")
}
behavioral_with_eeg <- behavioral_with_idx %>%
left_join(
eeg_trial_info %>%
select(subject, trial_idx, eeg_included, exclusion_reason, analysis_ready),
by = c("subject", "trial_idx")
) %>%
mutate(
in_eeg = !is.na(eeg_included),
eeg_analysis_ready = coalesce(analysis_ready, FALSE),
eeg_exclusion_reason = case_when(
is.na(exclusion_reason) ~ "rejected_during_eeg_preprocessing",
TRUE ~ exclusion_reason
)
) %>%
select(-eeg_included, -exclusion_reason, -analysis_ready)
if (verbose) {
n_in_eeg <- sum(behavioral_with_eeg$in_eeg)
n_not_in_eeg <- sum(!behavioral_with_eeg$in_eeg)
n_analysis_ready <- sum(behavioral_with_eeg$eeg_analysis_ready)
n_multiple_key <- sum(behavioral_with_eeg$eeg_exclusion_reason == "multiple_keypresses")
n_too_slow <- sum(behavioral_with_eeg$eeg_exclusion_reason == "too_slow")
n_rejected_eeg <- sum(behavioral_with_eeg$eeg_exclusion_reason == "rejected_during_eeg_preprocessing")
message("\n=== EEG INCLUSION SUMMARY ===")
message("  trials in eeg epochs: ", n_in_eeg, " (", round(100 * n_in_eeg / nrow(behavioral_with_eeg), 1), "%)")
message("  trials rejected during eeg preprocessing: ", n_rejected_eeg)
message("  trials eeg-analysis-ready: ", n_analysis_ready)
message("  trials excluded (multiple key): ", n_multiple_key)
message("  trials excluded (too slow): ", n_too_slow)
}
return(behavioral_with_eeg)
}
# test that it loads
rm(list = ls())
source("config/paths.R")
source("functions/load_behavioral_data.R")
source("functions/load_eeg_trial_info.R")
source("functions/apply_eeg_exclusions.R")
# quick test
beh <- load_behavioral_data(behavioral_dir, subjects = "390002")
eeg <- load_eeg_trial_info(eeg_dir, subjects = "390002", verbose = FALSE)
marked <- mark_eeg_inclusion(beh, eeg)
cat("✓ functions loaded successfully!\n")
